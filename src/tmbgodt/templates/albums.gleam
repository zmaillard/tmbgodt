// DO NOT EDIT: Code generated by matcha from albums.matcha

import gleam/string_builder.{type StringBuilder}
import gleam/list
import gleam/int
import tmbgodt/album.{type AlbumType}
import tmbgodt/templates/album as album_template
import tmbgodt/models/albumedit.{type AlbumEdit}

pub fn render_builder(model model: AlbumEdit) -> StringBuilder {
  let builder = string_builder.from_string("")
  let builder =
    string_builder.append(
      builder,
      "
",
    )
  let builder =
    string_builder.append(
      builder,
      "
<!DOCTYPE html>
<html>
  <head>
    <meta charset=\"utf-8\">
    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">
    <title>They Might Be Giants Of The Day</title>
    <link rel=\"stylesheet\" href=\"/static/index.css\">
    <script src=\"https://unpkg.com/htmx.org@1.9.11\"></script>
  </head>
  <body>
  <section class=\"section\" id=\"albums\">
  ",
    )
  let builder =
    string_builder.append_builder(
      builder,
      album_template.render_builder(model.albums),
    )
  let builder =
    string_builder.append(
      builder,
      "
  </section>
  ",
    )
  let builder = case model.is_authenticated {
    True -> {
      let builder =
        string_builder.append(
          builder,
          "
  
  <section class=\"section\">
    <div class=\"container\">
      <form 
      method=\"POST\" 
      hx-post=\"/album\" 
      hx-target=\"#albums\"
      enctype=\"multipart/form-data\">
      

    <div class=\"grid gap-6 mb-6 md:grid-cols-2\">
        <div>
            <label for=\"album_name\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Album name</label>
            <input type=\"text\" name=\"album_name\" id=\"album_name\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" placeholder=\"Album Name\" required />
        </div>
        <div>
            <label for=\"last_name\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Year Released</label>
            <input type=\"text\" id=\"album_year\" name=\"album_year\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" placeholder=\"Year\" required />
        </div>
    </div>
    <div class=\"mb-6\">
      <label for=\"album_type\" class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\">Select an Album Type</label>
  <select id=\"album_type\" name=\"album_type\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">
    
          ",
        )
      let builder =
        list.fold(model.album_types, builder, fn(builder, albumtype: AlbumType) {
          let builder =
            string_builder.append(
              builder,
              "
          <option value=",
            )
          let builder =
            string_builder.append(builder, int.to_string(albumtype.id))
          let builder = string_builder.append(builder, ">")
          let builder = string_builder.append(builder, albumtype.name)
          let builder =
            string_builder.append(
              builder,
              "</option>
          ",
            )

          builder
        })
      let builder =
        string_builder.append(
          builder,
          "
  </select>
    </div> 
    <button type=\"submit\" class=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">Add Album</button>

</form>
</div>
    </div>
  </section>
  ",
        )

      builder
    }
    False -> {
      let builder =
        string_builder.append(
          builder,
          "
  ",
        )

      builder
    }
  }
  let builder =
    string_builder.append(
      builder,
      "
  </body>
</html>
",
    )

  builder
}

pub fn render(model model: AlbumEdit) -> String {
  string_builder.to_string(render_builder(model: model))
}
