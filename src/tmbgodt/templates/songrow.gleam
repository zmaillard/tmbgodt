// DO NOT EDIT: Code generated by matcha from songrow.matcha

import gleam/string_builder.{type StringBuilder}

import gleam/int
import tmbgodt/day
import tmbgodt/models/songrow.{type SongRow}
import tmbgodt/song.{type Song}

pub fn render_builder(song_row song_row: SongRow) -> StringBuilder {
  let builder = string_builder.from_string("")
  let builder =
    string_builder.append(
      builder,
      "
",
    )
  let builder =
    string_builder.append(
      builder,
      "
<tr hx-target=\"this\" hx-swap=\"outerHTML\" class=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\">
    <th scope=\"row\" class=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\">",
    )
  let builder =
    string_builder.append(builder, day.to_day_string(song_row.song.day))
  let builder =
    string_builder.append(
      builder,
      "</th>
    <td class=\"px-6 py-4\">",
    )
  let builder = string_builder.append(builder, song_row.song.name)
  let builder =
    string_builder.append(
      builder,
      "</td>
    <td class=\"px-6 py-4\">",
    )
  let builder = string_builder.append(builder, song_row.song.album_name)
  let builder =
    string_builder.append(
      builder,
      "</td>
    <td class=\"px-6 py-4\">",
    )
  let builder =
    string_builder.append(builder, int.to_string(song_row.song.year))
  let builder =
    string_builder.append(
      builder,
      "</td>
    ",
    )
  let builder = case song_row.is_authenticated {
    True -> {
      let builder =
        string_builder.append(
          builder,
          "
        <td scope=\"col\" class=\"px-6 py-3\"><button hx-get=\"/admin/song/",
        )
      let builder =
        string_builder.append(builder, int.to_string(song_row.song.id))
      let builder =
        string_builder.append(
          builder,
          "/edit\">Edit</button></td>
    ",
        )

      builder
    }
    False -> {
      builder
    }
  }
  let builder =
    string_builder.append(
      builder,
      "
</tr>
",
    )

  builder
}

pub fn render(song_row song_row: SongRow) -> String {
  string_builder.to_string(render_builder(song_row: song_row))
}
