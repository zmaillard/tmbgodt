// DO NOT EDIT: Code generated by matcha from album.matcha

import gleam/list
import gleam/string_builder.{type StringBuilder}

import gleam/int
import tmbgodt/album.{type Album}

pub fn render_builder(albums albums: List(Album)) -> StringBuilder {
  let builder = string_builder.from_string("")
  let builder =
    string_builder.append(
      builder,
      "
",
    )
  let builder =
    string_builder.append(
      builder,
      "
<div class=\"relative overflow-x-auto\">
    <table class=\"w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400\">
        <thead class=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">
        <tr>
          <th scope=\"col\" class=\"px-6 py-3\">Album</th>
          <th scope=\"col\" class=\"px-6 py-3\">Type</th>
          <th scope=\"col\" class=\"px-6 py-3\">Year</th>
        </tr>
    </thead>
    <tbody>
    ",
    )
  let builder =
    list.fold(albums, builder, fn(builder, album: Album) {
      let builder =
        string_builder.append(
          builder,
          "
     <tr class=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\">
        <td class=\"px-6 py-4\">",
        )
      let builder = string_builder.append(builder, album.name)
      let builder =
        string_builder.append(
          builder,
          "</td>
        <td class=\"px-6 py-4\">",
        )
      let builder = string_builder.append(builder, album.album_type)
      let builder =
        string_builder.append(
          builder,
          "</td>
        <td class=\"px-6 py-4\">",
        )
      let builder = string_builder.append(builder, int.to_string(album.year))
      let builder =
        string_builder.append(
          builder,
          "</td>
    </tr>
    ",
        )

      builder
    })
  let builder =
    string_builder.append(
      builder,
      "
    </tbody>
</table>
</div>
",
    )

  builder
}

pub fn render(albums albums: List(Album)) -> String {
  string_builder.to_string(render_builder(albums: albums))
}
